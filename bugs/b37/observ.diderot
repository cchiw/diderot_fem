

 input fem#4(3)[] FF0;
 //Field:field #4(3)[] F0=2*x*y + x + 5*y + z**2*(x*y + 4*x + 2*y + 1) + z*(3*x*y - 2*x - 5*y + 5)
 fnspace VF0 = FunctionSpace(UnitCubeMesh(4,4,4), P(), 4);
 string pathF0 = "fnspace_data/";
 ofield#4(3)[] F0 = convert(FF0,VF0,pathF0);

 input fem#4(3)[3] FF1;
 //Field:field #4(3)[3] F1=[-x*y - 4*x + 3*y + z**2*(4*x*y - 4*x - 2*y + 3) + z*(-4*x*y + 2*x - y + 4) - 3, -3*x*y + 3*x + 5*y + z**2*(-4*x*y + x - 4*y + 2) + z*(-2*x - 3*y) - 2, -3*x*y - 4*x + 2*y + z**2*(-5*x*y + 4*x - 4*y + 4) + z*(5*x*y + 3*x + 3*y + 5) + 1]
 fnspace VF1 = TensorFunctionSpace(UnitCubeMesh(4,4,4), P(), 4,{3});
 string pathF1 = "fnspace_data/";
 ofield#4(3)[3] F1 = convert(FF1,VF1,pathF1);

ofield#2(3)[3, 3]G = ∇⊗∇(compose(F0,(F1*0.1)));
int length =7;
strand f(int i) {

	output tensor [3, 3] out =  [ [0.0,0.0,0.0], [0.0,0.0,0.0], [0.0,0.0,0.0]];
	    update {

		tensor [3] pos=[0,0,0];
		if(i==0){
			pos = ([0.43, 0.59, 0.8]);
		}
		else if(i==1){
			pos = ([0.43, 0.59, 0.8]);
		}
		else if(i==2){
			pos = ([0.08, 0.95, 0.83]);
		}
		else if(i==3){
			pos = ([0.96, 0.75, 0.13]);
		}
		else if(i==4){
			pos = ([0.12, 0.63, 0.06]);
		}
		else if(i==5){
			pos = ([0.44, 0.1, 0.65]);
		}
		else if(i==6){
			pos = ([0.32, 0.47, 0.07]);
		}
		else if(i==7){
			pos = ([0.38, 0.95, 0.25]);
		}

	if((insideF(pos,F1)) && (insideF(inst(F1,pos)*0.1,F0)) && true){
			out = inst(G, pos);
	}
	 else{out =  [ [7.2,7.2,7.2], [7.2,7.2,7.2], [7.2,7.2,7.2]];}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];