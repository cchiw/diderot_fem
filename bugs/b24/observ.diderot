

 input fem#4(2)[3] FF0;
 //Field:field #4(2)[3] F0=[-3*x*y - 5*y - 1, 5*x*y + 4*x - 2*y - 1, -3*x*y + 4*x - 3*y + 3]
 fnspace VF0 = TensorFunctionSpace(UnitSquareMesh(4,4), Lagrange(), 2,{3});
 string pathF0 = "fnspace_data/";
 ofield#4(2)[3] F0 = convert(FF0,VF0,pathF0);

 input fem#4(2)[3] FF1;
 //Field:field #4(2)[3] F1=[3*x*y + 2*x - 2*y - 4, x*y - 2*x - 3*y - 1, 4*x*y + 2*x - 3]
 fnspace VF1 = TensorFunctionSpace(UnitSquareMesh(4,4), Lagrange(), 2,{3});
 string pathF1 = "fnspace_data/";
 ofield#4(2)[3] F1 = convert(FF1,VF1,pathF1);

ofield#4(2)[3]G = ((F0))-(F1);
int length =7;
strand f(int i) {

	output tensor [3] out =  [0.0,0.0,0.0];
	    update {

		tensor [2] pos=[0,0];
		if(i==0){
			pos = ([0.46, 0.38]);
		}
		else if(i==1){
			pos = ([0.46, 0.38]);
		}
		else if(i==2){
			pos = ([0.41, 0.14]);
		}
		else if(i==3){
			pos = ([0.82, 0.63]);
		}
		else if(i==4){
			pos = ([0.41, 0.87]);
		}
		else if(i==5){
			pos = ([0.56, 0.58]);
		}
		else if(i==6){
			pos = ([0.48, 0.52]);
		}
		else if(i==7){
			pos = ([0.72, 0.43]);
		}

	if((insideF(pos,F0)) && (insideF(pos,F1)) && true){
			out = inst(G, pos);
	}
	 else{out =  [7.2,7.2,7.2];}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];