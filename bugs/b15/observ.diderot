
tensor [4]F0 = [-2, 4, -4, -1];

 input fem#4(2)[4] FF1;
 //Field:field #4(2)[4] F1=[x**3*(y**3 - 5*y**2 + 4) + 5*x**2*y - 5*x**2 + 4*x*y - x + y**3*(-2*x**2 + 2*x + 3) + y**2*(-x**2 - 4) + 3*y + 5, x**3*(y**3 + 4*y**2 + 2*y + 4) + 2*x**2*y + 4*x**2 + 4*x*y + y**3*(-2*x**2 - 4*x - 2) + y**2*(x**2 - 1) - 2*y + 2, x**3*(-y**3 - 3*y**2 - 2) - 3*x**2*y + 4*x**2 + x*y - 3*x + y**3*(4*x**2 + 3*x - 1) + y**2*(x**2 - 2*x + 5) + y + 1, x**3*(-2*y**3 + 4*y**2 - 4*y + 1) + 2*x**2*y - 2*x**2 + x*y + 4*x + y**3*(-2*x**2 + 3*x) + y**2*(5*x**2 + 4*x - 5) + y - 4]
 fnspace VF1 = TensorFunctionSpace(UnitSquareMesh(4,4), P(), 4,{4});
 string pathF1 = "../../fnspace_data/";
 ofield#4(2)[4] F1 = convert(FF1,VF1,pathF1);

ofield#4(2)[4, 4]G = (-(F0))âŠ—(F1);
int length =7;
strand f(int i) {

	output tensor [4, 4] out =  [ [0.0,0.0,0.0,0.0], [0.0,0.0,0.0,0.0], [0.0,0.0,0.0,0.0], [0.0,0.0,0.0,0.0]];
	    update {

		tensor [2] pos=[0,0];
		if(i==0){
			pos = ([0.09, 0.93]);
		}
		else if(i==1){
			pos = ([0.09, 0.93]);
		}
		else if(i==2){
			pos = ([0.97, 0.4]);
		}
		else if(i==3){
			pos = ([0.28, 0.97]);
		}
		else if(i==4){
			pos = ([0.38, 0.22]);
		}
		else if(i==5){
			pos = ([0.79, 0.12]);
		}
		else if(i==6){
			pos = ([0.56, 0.27]);
		}
		else if(i==7){
			pos = ([0.62, 0.26]);
		}

		out = inst(G,pos);
        stabilize;
    }
}
initially [ f(i) | i in 0..length];