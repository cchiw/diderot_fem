

 input fem#4(3)[] FF0;
 //Field:field #4(3)[] F0=x**3*(-4*y**2 - 2*y - 3) + 2*x**2*y + x**2 + 5*x*y + 4*x + y**3*(-3*x + 3) + y**2*(-2*x**2 - 5*x + 4) - 3*y + z**2*(x**3*(2*y**3 - y**2 - 3*y - 4) + x**2*y + x**2 - 4*x*y + 3*x + y**3*(2*x**2 - 5*x - 5) + y**2*(-3*x**2 - x + 2) - 5*y + 2) + z*(x**3*(3*y**3 + 4*y**2 - 4*y - 5) - 3*x**2*y**2 + 5*x**2*y - 2*x**2 + 2*x*y - 5*x + y**3*(2*x**2 + 2*x - 4) - 5*y + 4) + 2
 fnspace VF0 = FunctionSpace(UnitCubeMesh(3,3,3), P(), 4);
 string pathF0 = "fnspace_data/";
 ofield#4(3)[] F0 = convert(FF0,VF0,pathF0);

ofield#2(3)[]G = det(∇⊗∇(F0));
int length =7;
strand f(int i) {

	output tensor [] out = 0.0;
	    update {

		tensor [3] pos=[0,0,0];
		if(i==0){
			pos = ([0.69, 0.06, 0.31]);
		}
		else if(i==1){
			pos = ([0.69, 0.06, 0.31]);
		}
		else if(i==2){
			pos = ([0.1, 0.24, 0.5]);
		}
		else if(i==3){
			pos = ([0.32, 0.16, 0.07]);
		}
		else if(i==4){
			pos = ([0.93, 0.3, 0.27]);
		}
		else if(i==5){
			pos = ([0.69, 0.01, 0.36]);
		}
		else if(i==6){
			pos = ([0.5, 0.03, 0.61]);
		}
		else if(i==7){
			pos = ([0.58, 0.26, 0.23]);
		}

	if((insideF(pos,F0)) && true){
			out = inst(G, pos);
	}
	 else{out = 7.2;}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];