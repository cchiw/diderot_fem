

 input fem#4(2)[2] FF0;
 //Field:field #4(2)[2] F0=[x*y + 5*x - 4*y - 1, -5*x*y - 2*x - 3*y + 4]
 fnspace VF0 = TensorFunctionSpace(UnitSquareMesh(4,4), P(), 4,{2});
 string pathF0 = "fnspace_data/";
 ofield#4(2)[2] F0 = convert(FF0,VF0,pathF0);

 input fem#4(2)[2, 2] FF1;
 //Field:field #4(2)[2, 2] F1=[[-2*x*y - x + 4*y + 3, -2*x*y + 5*x - 5*y + 4], [5*x*y + 2*x - 3*y + 5, x*y - 5*x + 4*y - 3]]
 fnspace VF1 = TensorFunctionSpace(UnitSquareMesh(4,4), P(), 4,{2,2});
 string pathF1 = "fnspace_data/";
 ofield#4(2)[2, 2] F1 = convert(FF1,VF1,pathF1);

ofield#3(2)[]G = ∇•((F0)•(F1));
int length =7;
strand f(int i) {

	output tensor [] out = 0.0;
	    update {

		tensor [2] pos=[0,0];
		if(i==0){
			pos = ([0.19, 0.05]);
		}
		else if(i==1){
			pos = ([0.19, 0.05]);
		}
		else if(i==2){
			pos = ([0.74, 0.16]);
		}
		else if(i==3){
			pos = ([0.78, 0.99]);
		}
		else if(i==4){
			pos = ([0.72, 0.17]);
		}
		else if(i==5){
			pos = ([0.86, 0.2]);
		}
		else if(i==6){
			pos = ([0.33, 0.16]);
		}
		else if(i==7){
			pos = ([0.96, 0.4]);
		}

	if((insideF(pos,F0)) && (insideF(pos,F1)) && true){
			out = inst(G, pos);
	}
	 else{out = 7.2;}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];