

 input fem#4(2)[2] FF0;
 //Field:field #4(2)[2] F0=[x**3*(-3*y**3 + 4*y**2 - 4*y + 1) - 5*x**2*y + 4*x**2 - 4*x*y + x + y**3*(x**2 + 2*x - 3) + y**2*(x**2 + 4*x - 2) - 5*y - 1, x**3*(2*y**3 + 2*y**2 + 5*y + 3) + 5*x**2*y - 4*x**2 - 3*x*y - x + y**3*(x**2 - 4) + y**2*(-5*x**2 + 2*x - 3) - 3*y + 4]
 fnspace VF0 = TensorFunctionSpace(UnitSquareMesh(4,4), Lagrange(), 4,{2});
 string pathF0 = "../../fnspace_data/";
 ofield#4(2)[2] F0 = convert(FF0,VF0,pathF0);

 input fem#4(2)[2] FF1;
 //Field:field #4(2)[2] F1=[x**3*(5*y**3 + 2*y - 2) + 4*x**2*y - 5*x**2 - 4*x*y - 5*x + y**3*(x**2 - 5*x + 4) + y**2*(-5*x**2 + 3*x - 4) + 2*y + 3, x**3*(2*y**3 - 3*y**2 - 2*y + 4) + 2*x**2*y + x*y + 5*x + y**3*(-5*x**2 - 5) + y**2*(2*x**2 + 5*x + 5) - 2*y - 2]
 fnspace VF1 = TensorFunctionSpace(UnitSquareMesh(4,4), P(), 4,{2});
 string pathF1 = "../../fnspace_data/";
 ofield#4(2)[2] F1 = convert(FF1,VF1,pathF1);

ofield#4(2)[2]G = (-(F0))+(F1);
int length =7;
strand f(int i) {

	output tensor [2] out =  [0.0,0.0];
	    update {

		tensor [2] pos=[0,0];
		if(i==0){
			pos = ([0.2, 0.34]);
		}
		else if(i==1){
			pos = ([0.2, 0.34]);
		}
		else if(i==2){
			pos = ([0.44, 0.42]);
		}
		else if(i==3){
			pos = ([0.32, 0.09]);
		}
		else if(i==4){
			pos = ([0.1, 0.66]);
		}
		else if(i==5){
			pos = ([0.11, 0.97]);
		}
		else if(i==6){
			pos = ([0.12, 0.4]);
		}
		else if(i==7){
			pos = ([0.16, 0.74]);
		}

	if((insideF(pos,F0)) && (insideF(pos,F1)) && true){
			out = inst(G, pos);
	}
	 else{out =  [7.2,7.2];}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];