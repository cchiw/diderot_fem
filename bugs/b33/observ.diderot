

 input fem#4(3)[2, 2] FF0;
 //Field:field #4(3)[2, 2] F0=[[y + z**2*(-x*y + 4*x - 1) + z*(-5*x*y + 4*x + 2*y - 2) - 3, -2*x*y - 4*x - 4*y + z**2*(5*x*y - 4*x + y - 3) + z*(3*x*y - 2*x + 2*y + 5) - 2], [4*x*y + z**2*(3*x*y - x - 4*y - 4) + z*(-x*y - 5*x - y - 2) - 1, -2*x*y - 3*x + y + z**2*(-3*x*y + 5*x + 3*y) + z*(-2*x*y + x + 5*y + 5) + 4]]
 fnspace VF0 = TensorFunctionSpace(UnitCubeMesh(4,4,4), P(), 4,{2,2});
 string pathF0 = "fnspace_data/";
 ofield#4(3)[2, 2] F0 = convert(FF0,VF0,pathF0);

 input fem#4(3)[3] FF1;
 //Field:field #4(3)[3] F1=[-x*y - 3*x - 3*y + z**2*(5*x*y + 4*x - 4*y + 1) + z*(2*x*y + 3*x + 5*y + 1) + 5, -y + z**2*(-4*x*y + 5*x - y + 4) + z*(3*x*y + 5*x - 3*y) - 5, -4*x*y + 5*x + y + z**2*(x*y + 3*x + 3*y - 2) + z*(-4*x*y - 2*x + 4*y + 4) + 4]
 fnspace VF1 = TensorFunctionSpace(UnitCubeMesh(4,4,4), P(), 4,{3});
 string pathF1 = "fnspace_data/";
 ofield#4(3)[3] F1 = convert(FF1,VF1,pathF1);

ofield#4(3)[2, 2]G = compose(inv(F0),(F1*0.1));
int length =7;
strand f(int i) {

	output tensor [2, 2] out =  [ [0.0,0.0], [0.0,0.0]];
	    update {

		tensor [3] pos=[0,0,0];
		if(i==0){
			pos = ([0.35, 0.59, 0.69]);
		}
		else if(i==1){
			pos = ([0.35, 0.59, 0.69]);
		}
		else if(i==2){
			pos = ([0.08, 0.79, 0.37]);
		}
		else if(i==3){
			pos = ([0.35, 0.45, 0.39]);
		}
		else if(i==4){
			pos = ([0.56, 0.21, 0.38]);
		}
		else if(i==5){
			pos = ([0.1, 0.29, 0.54]);
		}
		else if(i==6){
			pos = ([0.97, 0.19, 0.19]);
		}
		else if(i==7){
			pos = ([0.55, 0.96, 0.56]);
		}

	if((insideF(pos,F1)) && (insideF(inst(F1,pos)*0.1,F0)) && true){
		if(((det(inst(F0, pos))>0.01) || (det(inst(F0, pos))< -0.01)))
			{	out = inst(G, pos);}
		else{out =  [ [7.2,7.2], [7.2,7.2]];}
	}
	 else{out =  [ [7.2,7.2], [7.2,7.2]];}
        stabilize;
    }
}
initially [ f(i) | i in 0..length];